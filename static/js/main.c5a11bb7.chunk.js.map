{"version":3,"sources":["components/FeedbackOptions.js","components/Section.js","components/Statistic.js","components/Notification.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","Btn","type","name","onClick","toUpperCase","styled","button","Section","title","children","Blocks","section","Statistic","good","neutral","bad","total","positivePercentage","StyledUl","ul","Notification","message","App","state","addStatistic","evt","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"ojBAIA,IASeA,EATS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAC/B,OACI,mCACKC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAAI,cAACC,EAAD,CAAkBC,KAAK,SAASC,KAAMH,EAAMI,QAAWR,EAAvD,SAAyEI,EAAKK,eAAlEL,SAiBpDC,EAAMK,IAAOC,OAAV,K,6JCrBT,IAQeC,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,eAACC,EAAD,WACI,6BAAKF,IACJC,MAOPC,EAASL,IAAOM,QAAV,K,oFCVZ,IAYeC,EAZG,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC5C,OACI,eAACC,EAAD,WACI,wCAAU,+BAAOL,OACjB,2CAAa,+BAAOC,OACpB,uCAAS,+BAAOC,OAChB,yCAAW,+BAAOC,OAClB,qDAAuB,iCAAOA,EAAQC,EAAqB,EAApC,cAe7BC,EAAWb,IAAOc,GAAV,KCjBCC,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,KCESC,E,4MACnBC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,aAAe,SAACC,GACd,IAAMvB,EAAOuB,EAAIC,OAAOxB,KACxB,EAAKyB,UAAS,SAACC,GAAD,sBAAa1B,EAAQ0B,EAAK1B,GAAO,O,EAGjD2B,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACnC,OAFwB,EACjBV,KADiB,EACXE,IADW,EACND,S,EAMrBgB,gCAAkC,WAAO,IAC7BjB,EAAS,EAAKU,MAAdV,KACT,OAAQkB,KAAKC,MAAc,IAAPnB,EAAc,EAAKgB,uB,uDAKxC,OACE,qCACE,cAAC,EAAD,CAASrB,MAAM,4BAAf,SACE,cAAC,EAAD,CAAiBd,QAASuC,KAAKV,MAAO5B,gBAAiBsC,KAAKT,iBAG9D,cAAC,EAAD,CAAShB,MAAM,aAAf,SACAyB,KAAKJ,qBAAsB,cAAC,EAAD,2BAAeI,KAAKV,OAApB,IACzBP,MAAOiB,KAAKJ,qBACZZ,mBAAoBgB,KAAKH,qCACpB,cAAC,EAAD,CAAcT,QAAS,+B,GApCLa,aCDjCC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c5a11bb7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n    return (\r\n        <>\r\n            {Object.keys(options).map(item => <Btn key = {item} type=\"button\" name={item} onClick = {onLeaveFeedback}>{item.toUpperCase()}</Btn>)}\r\n  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default FeedbackOptions\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.exact({\r\n        good: PropTypes.number,\r\n        neutral: PropTypes.number,\r\n        bad: PropTypes.number,\r\n    }),\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nconst Btn = styled.button`\r\nborder: none;\r\noutline: none;\r\nbackground: LightGrey;\r\nmargin-right: 10px;\r\npadding-right: 10px;\r\npadding-left: 10px;\r\nborder-radius: 3px;\r\nfont-weight: bold;\r\n&:hover {\r\n    background: DimGrey;\r\n    color: white;\r\n}\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <Blocks>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </Blocks>\r\n    )\r\n}\r\nexport default Section\r\n\r\n\r\nconst Blocks = styled.section`\r\nwidth: 1100px;\r\nmargin: 10px auto;\r\n/* outline: 1px solid tomato; */\r\npadding: 10px;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <StyledUl>\r\n            <li>Good: <span>{good}</span></li>\r\n            <li>Neutral: <span>{neutral}</span></li>\r\n            <li>Bad: <span>{bad}</span></li>\r\n            <li>Total: <span>{total}</span></li>\r\n            <li>Positive feedback: <span>{total ? positivePercentage : 0}%</span></li>\r\n        </StyledUl>\r\n    )\r\n}\r\n\r\nexport default Statistic;\r\n\r\nStatistic.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n};\r\n\r\nconst StyledUl = styled.ul`\r\npadding: 0;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n}","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Statistic from './components/Statistic';\nimport Notification from './components/Notification'\n\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  addStatistic = (evt) => {\n    const name = evt.target.name;\n    this.setState((prev) => ({[name] : prev[name] +1}))\n  }\n \n  countTotalFeedback = () => {\n    const { good, bad, neutral } = this.state;\n     return good + bad + neutral\n    \n    \n  }\n\n  countPositiveFeedbackPercentage = () => {    \n      const { good } = this.state;\n     return  Math.round((good * 100) / this.countTotalFeedback())\n\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leve your feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.addStatistic}/>\n         </Section>\n\n        <Section title=\"Statistics\">\n       {this.countTotalFeedback()? <Statistic {...this.state}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n          /> : <Notification message =\"No feedback given\"/>}\n      </Section>\n  </>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}